buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.5.4"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "org.sonarqube" version "2.6"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: "net.saliman.cobertura"
apply plugin: "org.sonarqube"

group = 'com.pe.cema'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-aop')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('com.h2database:h2')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.powermock:powermock-api-mockito2:2.0.0-beta.5')
	// https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
	testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.0-beta.5'


}

jacoco {
	toolVersion = "0.8.1"
	reportsDir = file("$buildDir/customJacocoReportDir")
}


jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

sonarqube {
	properties {
		property 'sonar.projectName', "${-> project.name}"
		property 'sonar.host.url', "http://192.168.1.145:9000"
		property 'sonar.jacoco.reportPaths', "build/jacoco/test.exec"
		property 'sonar.jacoco.reportPath', "build/jacoco/test.exec"
		property 'sonar.buildbreaker.skip', "true"
	}
}
